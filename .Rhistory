modified.b.matrix<-matrix(0,ncol=60,nrow=K)
for (j in 1:30){
modified.b.matrix[,(j*2-1)]=b.matrix[,j]
}
}} else {
if (level=="h"){
fixed.b=c(runif(5,1,3),runif(5,-3,-1))
b.matrix=matrix(0,ncol=30,nrow=K)
for (j in 1:30){
if (j<11){
b.matrix[,j]=sample(c(runif(5,1,1.5),runif(5,-1.5,-1)),K)
}
else {if (j<21){
b.matrix[,j]=sample(c(runif(3,1,1.5),runif(3,2,2.5),runif(4,3,3.5)),K)
}
else {
b.matrix[,j]=sample(c(runif(3,-1.5,-1),runif(3,-2.5,-2),runif(4,-3.5,-3)),K)
}
}
}
modified.b.matrix<-matrix(0,ncol=60,nrow=K)
for (j in 1:30){
modified.b.matrix[,(j*2-1)]=b.matrix[,j]
}
} else if (level=="m"){
fixed.b=c(runif(5,1,3),runif(5,-3,-1))
b.matrix=matrix(0,ncol=30,nrow=K)
for (j in 1:30){
if (j<11){
b.matrix[,j]=sample(c(runif(5,2,2.5),runif(5,-2.5,-2)),K)
}
else {if (j<21){
b.matrix[,j]=sample(c(runif(3,1,1.5),runif(3,3,3.5),runif(4,5,5.5)),K)
}
else {
b.matrix[,j]=sample(c(runif(3,-1.5,-1),runif(3,-3.5,-3),runif(4,-5.5,-5)),K)
}
}
}
modified.b.matrix<-matrix(0,ncol=60,nrow=K)
for (j in 1:30){
modified.b.matrix[,(j*2-1)]=b.matrix[,j]
}
} else {
fixed.b=c(runif(5,1,6),runif(5,-6,-1))
b.matrix=matrix(0,ncol=30,nrow=K)
for (j in 1:30){
if (j<11){
b.matrix[,j]=sample(c(runif(5,5,6.5),runif(5,-6.5,-5)),K)
}
else {if (j<21){
b.matrix[,j]=sample(c(runif(3,1,2),runif(3,5,6),runif(4,9,10)),K)
}
else {
b.matrix[,j]=sample(c(runif(3,-2,-1),runif(3,-6,-5),runif(4,-10,-9)),K)
}
}
}
modified.b.matrix<-matrix(0,ncol=60,nrow=K)
for (j in 1:30){
modified.b.matrix[,(j*2-1)]=b.matrix[,j]
}
}
}
if (Pred_type=="Con"){
while (t<K){
n.temp=sample(seq(nlower,nupper),1)
n=c(n,n.temp)
sid.temp=rep(t+1,n.temp)
sid=c(sid,sid.temp)
temp.x=mvrnorm(n.temp,mu=rep(0,J),Sigma=Sigma)
temp.rb=c(fixed.b[1:5],rep(0,100),fixed.b[6:10],rep(0,100),modified.b.matrix[(t+1),])
temp.y=rnorm(1,0,5)+temp.x[,1:270]%*%temp.rb+rnorm(n.temp,0,sigma)
temp.y=temp.y
x=rbind(x,scale(temp.x))
y=c(y,temp.y)
t=t+1
}} else {
allele.freq=runif(J,0.05,0.5)
while (t<K){
n.temp=sample(seq(nlower,nupper),1)
n=c(n,n.temp)
sid.temp=rep(t+1,n.temp)
sid=c(sid,sid.temp)
divider=rep(0,J)
temp.x1=matrix(0,ncol=J,nrow=n.temp)
temp.x2=matrix(0,ncol=J,nrow=n.temp)
temp.z1=mvrnorm(n.temp,mu=rep(0,J),Sigma=Sigma)
temp.z2=mvrnorm(n.temp,mu=rep(0,J),Sigma=Sigma)
for (j in 1:J){
temp.x1[,j]=ifelse(temp.z1[,j]<=qnorm(allele.freq[j]),1,0)
temp.x2[,j]=ifelse(temp.z2[,j]<=qnorm(allele.freq[j]),1,0)
divider[j]=sqrt(allele.freq[j]*(1-allele.freq[j]))
}
temp.x=temp.x1+temp.x2
temp.rb=c(fixed.b[1:5],rep(0,100),fixed.b[6:10],rep(0,100),modified.b.matrix[(t+1),])/divider[1:270]
temp.y=rnorm(1,0,5)+temp.x[,1:270]%*%temp.rb+rnorm(n.temp,0,sigma)
temp.x=scale(temp.x)
temp.x[is.na(temp.x)]<-0
x=rbind(x,temp.x)
y=c(y,temp.y)
t=t+1
}
}
x=x[-1,]
y=y[-1]
n=n[-1]
sid=sid[-1]
return(list(x,y,n,sid))
}
mydata=Data_Generator(Pred_type="Con", K=4,level="e",sigma=4,nlower=50,nupper=300)
data_yx=cbind(mydata[[2]],mydata[[1]])
data_sid=mydata[[4]]
HomUHet(data=data_yx,sid=data_sid,solution_path=FALSE,y_name=NULL)
check()
check()
check()
document()
check()
document()
check()
document()
document()
check()
document()
document()
document()
document()
document()
check()
document()
check()
document()
check()
install_github("Pei-Yang/HomUHet",auth_token="6c306d53d56f1e8a2ce6601b9a83a234fa18e2e5")
version()
r.version()
Version()
version
document()
library(devtools)
library(roxygen2)
document()
install.packages("gglasso")
document()
document()
check()
install_github("Pei-Yang/HomUHet",auth_token = "6c306d53d56f1e8a2ce6601b9a83a234fa18e2e5")
library(HomUHet)
data=Data_Generator(Pred_type="Con", K=4,level="e",sigma=4,nlower=50,nupper=300)
data=Data_Generator(Pred_type="Con", K=4,level="e",sigma=4,nlower=50,nupper=300)
Data_Generator<-function(Pred_type="Con", K,level,sigma,nlower,nupper){
library(MASS)
J=1400
v=c(1,rep(NA,(J-1)))
p=0.5
for (i in 2:J){
v[i]=p^(i-1)
}
Sigma=toeplitz(v)
t=0
x=rep(0,J)
y=0
sid=0
b=rep(0,40)
n=0
if (K==4){
if (level=="h"){
fixed.b=c(runif(5,1,3),runif(5,-3,-1))
b.matrix=matrix(0,ncol=30,nrow=K)
for (j in 1:30){
if (j<11){
b.matrix[,j]=sample(c(runif(2,1,1.5),runif(2,-1.5,-1)),K)
}
else {if (j<21){
b.matrix[,j]=sample(c(runif(1,1,1.5),runif(1,2,2.5),runif(2,3,3.5)),K)
}
else {
b.matrix[,j]=sample(c(runif(1,-1.5,-1),runif(1,-2.5,-2),runif(2,-3.5,-3)),K)
}
}
}
modified.b.matrix<-matrix(0,ncol=60,nrow=K)
for (j in 1:30){
modified.b.matrix[,(j*2-1)]=b.matrix[,j]
}
} else if (level=="m"){
fixed.b=c(runif(5,1,3),runif(5,-3,-1))
b.matrix=matrix(0,ncol=30,nrow=K)
for (j in 1:30){
if (j<11){
b.matrix[,j]=sample(c(runif(2,2,2.5),runif(2,-2.5,-2)),K)
}
else {if (j<21){
b.matrix[,j]=sample(c(runif(1,1,1.5),runif(1,3,3.5),runif(2,5,5.5)),K)
}
else {
b.matrix[,j]=sample(c(runif(1,-1.5,-1),runif(1,-3.5,-3),runif(2,-5.5,-5)),K)
}
}
}
modified.b.matrix<-matrix(0,ncol=60,nrow=K)
for (j in 1:30){
modified.b.matrix[,(j*2-1)]=b.matrix[,j]
}
} else {
fixed.b=c(runif(5,3,6),runif(5,-6,-3))
b.matrix=matrix(0,ncol=30,nrow=K)
for (j in 1:30){
if (j<11){
b.matrix[,j]=sample(c(runif(2,5,6.5),runif(2,-6.5,-5)),K)
}
else {if (j<21){
b.matrix[,j]=sample(c(runif(1,1,2),runif(1,5,6),runif(2,9,10)),K)
}
else {
b.matrix[,j]=sample(c(runif(1,-2,-1),runif(1,-6,-5),runif(2,-10,-9)),K)
}
}
}
modified.b.matrix<-matrix(0,ncol=60,nrow=K)
for (j in 1:30){
modified.b.matrix[,(j*2-1)]=b.matrix[,j]
}
}} else {
if (level=="h"){
fixed.b=c(runif(5,1,3),runif(5,-3,-1))
b.matrix=matrix(0,ncol=30,nrow=K)
for (j in 1:30){
if (j<11){
b.matrix[,j]=sample(c(runif(5,1,1.5),runif(5,-1.5,-1)),K)
}
else {if (j<21){
b.matrix[,j]=sample(c(runif(3,1,1.5),runif(3,2,2.5),runif(4,3,3.5)),K)
}
else {
b.matrix[,j]=sample(c(runif(3,-1.5,-1),runif(3,-2.5,-2),runif(4,-3.5,-3)),K)
}
}
}
modified.b.matrix<-matrix(0,ncol=60,nrow=K)
for (j in 1:30){
modified.b.matrix[,(j*2-1)]=b.matrix[,j]
}
} else if (level=="m"){
fixed.b=c(runif(5,1,3),runif(5,-3,-1))
b.matrix=matrix(0,ncol=30,nrow=K)
for (j in 1:30){
if (j<11){
b.matrix[,j]=sample(c(runif(5,2,2.5),runif(5,-2.5,-2)),K)
}
else {if (j<21){
b.matrix[,j]=sample(c(runif(3,1,1.5),runif(3,3,3.5),runif(4,5,5.5)),K)
}
else {
b.matrix[,j]=sample(c(runif(3,-1.5,-1),runif(3,-3.5,-3),runif(4,-5.5,-5)),K)
}
}
}
modified.b.matrix<-matrix(0,ncol=60,nrow=K)
for (j in 1:30){
modified.b.matrix[,(j*2-1)]=b.matrix[,j]
}
} else {
fixed.b=c(runif(5,1,6),runif(5,-6,-1))
b.matrix=matrix(0,ncol=30,nrow=K)
for (j in 1:30){
if (j<11){
b.matrix[,j]=sample(c(runif(5,5,6.5),runif(5,-6.5,-5)),K)
}
else {if (j<21){
b.matrix[,j]=sample(c(runif(3,1,2),runif(3,5,6),runif(4,9,10)),K)
}
else {
b.matrix[,j]=sample(c(runif(3,-2,-1),runif(3,-6,-5),runif(4,-10,-9)),K)
}
}
}
modified.b.matrix<-matrix(0,ncol=60,nrow=K)
for (j in 1:30){
modified.b.matrix[,(j*2-1)]=b.matrix[,j]
}
}
}
if (Pred_type=="Con"){
while (t<K){
n.temp=sample(seq(nlower,nupper),1)
n=c(n,n.temp)
sid.temp=rep(t+1,n.temp)
sid=c(sid,sid.temp)
temp.x=mvrnorm(n.temp,mu=rep(0,J),Sigma=Sigma)
temp.rb=c(fixed.b[1:5],rep(0,100),fixed.b[6:10],rep(0,100),modified.b.matrix[(t+1),])
temp.y=rnorm(1,0,5)+temp.x[,1:270]%*%temp.rb+rnorm(n.temp,0,sigma)
temp.y=temp.y
x=rbind(x,scale(temp.x))
y=c(y,temp.y)
t=t+1
}} else {
allele.freq=runif(J,0.05,0.5)
while (t<K){
n.temp=sample(seq(nlower,nupper),1)
n=c(n,n.temp)
sid.temp=rep(t+1,n.temp)
sid=c(sid,sid.temp)
divider=rep(0,J)
temp.x1=matrix(0,ncol=J,nrow=n.temp)
temp.x2=matrix(0,ncol=J,nrow=n.temp)
temp.z1=mvrnorm(n.temp,mu=rep(0,J),Sigma=Sigma)
temp.z2=mvrnorm(n.temp,mu=rep(0,J),Sigma=Sigma)
for (j in 1:J){
temp.x1[,j]=ifelse(temp.z1[,j]<=qnorm(allele.freq[j]),1,0)
temp.x2[,j]=ifelse(temp.z2[,j]<=qnorm(allele.freq[j]),1,0)
divider[j]=sqrt(allele.freq[j]*(1-allele.freq[j]))
}
temp.x=temp.x1+temp.x2
temp.rb=c(fixed.b[1:5],rep(0,100),fixed.b[6:10],rep(0,100),modified.b.matrix[(t+1),])/divider[1:270]
temp.y=rnorm(1,0,5)+temp.x[,1:270]%*%temp.rb+rnorm(n.temp,0,sigma)
temp.x=scale(temp.x)
temp.x[is.na(temp.x)]<-0
x=rbind(x,temp.x)
y=c(y,temp.y)
t=t+1
}
}
x=x[-1,]
y=y[-1]
n=n[-1]
sid=sid[-1]
return(list(x,y,n,sid))
}
data=Data_Generator(Pred_type="Con", K=4,level="e",sigma=4,nlower=50,nupper=300)
fit<-HomUHet(data=cbind(data[[2]],data[[1]]),sid=data[[4]],solution_path = TRUE)
fit<-HomUHet(data=cbind(data[[2]],data[[1]]),sid=data[[4]],solution_path = FALSE)
fit<-HomUHet(data=cbind(data[[2]],data[[1]]),sid=data[[4]],Solution_path = FALSE)
fit<-HomUHet(data=cbind(data[[2]],data[[1]]),sid=data[[4]],Solution_Path = FALSE)
document()
install.packages("HomUHet")
install.packages("HomUHet")
version()
R.version()
detach(HomUHet)
detach("HomUHet")
install("HomUHet")
install_github("Pei-Yang/HomUHet",auth_token="6c306d53d56f1e8a2ce6601b9a83a234fa18e2e5")
library(HomUHet)
data=Data_Generator(Pred_type="Con", K=4,level="e",sigma=4,nlower=50,nupper=300)
fit<-HomUHet(data=cbind(data[[2]],data[[1]]),sid=data[[4]],solution_ath = TRUE)
fit<-HomUHet(data=cbind(data[[2]],data[[1]]),sid=data[[4]],solution_path = TRUE)
fit<-HomUHet(data=cbind(data[[2]],data[[1]]),sid=data[[4]],solution_ath = TRUE)
fit<-HomUHet(data=cbind(data[[2]],data[[1]]),sid=data[[4]])
summary(fit)
fit$Homo
fit$Heter
fit$Homo_estimates
fit$Heter_estimates
document()
document()
check(cleanup = FALSE,manual = TRUE,path = getwd())
document()
check(cleanup = FALSE,manual = TRUE,path = getwd())
check(manual = TRUE,path = getwd())
document()
check(manual = TRUE,path = getwd())
document()
check(manual = TRUE,path = getwd())
document()
document()
check(manual = TRUE,path = getwd())
check()
check(manual=TRUE)
?check()
check_built(
path = NULL,
cran = FALSE,
remote = FALSE,
incoming = remote,
force_suggests = FALSE,
run_dont_test = FALSE,
manual = TRUE,
args = "--timings",
env_vars = NULL,
check_dir = tempdir(),
quiet = FALSE,
error_on = c("never", "error", "warning", "note")
)
check_built(
path = "/Users/sephinapeiyang/Documents/R packages/HomUHet",
cran = FALSE,
remote = FALSE,
incoming = remote,
force_suggests = FALSE,
run_dont_test = FALSE,
manual = TRUE,
args = "--timings",
env_vars = NULL,
check_dir = tempdir(),
quiet = FALSE,
error_on = c("never", "error", "warning", "note")
)
check_built(
path = "/Users/sephinapeiyang/Documents/R packages/HomUHet",
cran = FALSE,
remote = FALSE,
incoming = FLASE,
force_suggests = FALSE,
run_dont_test = FALSE,
manual = TRUE,
args = "--timings",
env_vars = NULL,
check_dir = tempdir(),
quiet = FALSE,
error_on = c("never", "error", "warning", "note")
)
check(manual=TRUE, check_dir="/Users/sephinapeiyang/Documents/R packages/HomUHet")
document()
check(manual=TRUE, check_dir="/Users/sephinapeiyang/Documents/R packages/HomUHet")
document()
document()
document()
check(manual=TRUE, check_dir="/Users/sephinapeiyang/Documents/R packages/HomUHet")
document()
check(manual=TRUE, check_dir="/Users/sephinapeiyang/Documents/R packages/HomUHet")
document()
check(manual=TRUE, check_dir="/Users/sephinapeiyang/Documents/R packages/HomUHet")
document()
check(manual=TRUE, check_dir="/Users/sephinapeiyang/Documents/R packages/HomUHet")
document()
check(manual=TRUE, check_dir="/Users/sephinapeiyang/Documents/R packages/HomUHet")
document()
check(manual=TRUE, check_dir="/Users/sephinapeiyang/Documents/R packages/HomUHet")
document()
check(manual=TRUE, check_dir="/Users/sephinapeiyang/Documents/R packages/HomUHet")
document()
check(manual=TRUE, check_dir="/Users/sephinapeiyang/Documents/R packages/HomUHet")
document()
document()
check(manual=TRUE, check_dir="/Users/sephinapeiyang/Documents/R packages/HomUHet")
promptPackage()
promptPackage(package=HomUHet)
promptPackage(package="HomUHet")
document()
document()
check(manual=TRUE, check_dir="/Users/sephinapeiyang/Documents/R packages/HomUHet")
document()
check(manual=TRUE, check_dir="/Users/sephinapeiyang/Documents/R packages/HomUHet")
document()
document()
check(manual=TRUE,check_dir="/Users/sephinapeiyang/Documents/R packages/HomUHet")
document()
check(manual=TRUE,check_dir="/Users/sephinapeiyang/Documents/R packages/HomUHet")
document()
check(manual=TRUE,check_dir="/Users/sephinapeiyang/Documents/R packages/HomUHet")
check(manual=TRUE,check_dir="/Users/sephinapeiyang/Documents/R packages/HomUHet")
document()
check(manual=TRUE,check_dir="/Users/sephinapeiyang/Documents/R packages/HomUHet")
check()
document()
usethis::use_package("MASS")
document()
roxygenise()
document()
usethis::use_package("mvtnorm")
document()
document()
document()
document()
document()
document()
document()
document()
document()
check(manual=TRUE,check_dir="/Users/sephinapeiyang/Documents/R packages")
check(manual=TRUE,check_dir="/Users/sephinapeiyang/Documents/R packages")
check(manual=TRUE,check_dir="/Users/sephinapeiyang/Documents/R packages")
document()
document()
document()
check(manual=TRUE,check_dir="/Users/sephinapeiyang/Documents/R packages")
document()
check(manual=TRUE,check_dir="/Users/sephinapeiyang/Documents/R packages")
document()
check(manual=TRUE,check_dir="/Users/sephinapeiyang/Documents/R packages")
document()
document()
check(manual=TRUE,check_dir="/Users/sephinapeiyang/Documents/R packages")
document()
document()
document()
check(manual=TRUE,check_dir="/Users/sephinapeiyang/Documents/R packages")
document()
check(manual=TRUE,check_dir="/Users/sephinapeiyang/Documents/R packages")
check(manual=TRUE,check_dir="/Users/sephinapeiyang/Documents/R packages",vignettes=FALSE)
use_data_raw()
usethis::use_data(HomUHet_data, overwrite = TRUE)
document()
check(manual=TRUE,check_dir="/Users/sephinapeiyang/Documents/R packages",vignettes=FALSE)
document()
document()
document()
document()
document()
set.seed(100)
HomUHet_data=HomUHet.sim(Pred_type="Gaussian", J=500, K=4, beta=NULL,
rho=0.5,sigma=2, level="m",
nlower=50,nupper=300)
usethis::use_data(HomUHet_data, overwrite = TRUE)
library(HomUHet)
HomUHet_data[1:4,1:4]
document()
check(manual=TRUE,check_dir="/Users/sephinapeiyang/Documents/R packages",vignettes=FALSE)
document()
check(manual=TRUE,check_dir="/Users/sephinapeiyang/Documents/R packages",vignettes=FALSE)
